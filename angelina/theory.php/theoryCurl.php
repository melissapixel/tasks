<?php
    // Библиотека CURL в PHP

    // Библиотека CURL позволяет осуществлять HTTP запросы и получать HTML код страниц сайтов в переменные. При этом она может работать с куками, с HTTP заголовками, а также позволяет отправлять формы и переходить по редиректам.

    // Базовая работа с CURL состоит всего лишь из трех функций: curl_init, curl_setopt и curl_exec.

    // Функция curl_init инициализирует сеанс работы с библиотекой и записывает его в переменную. Дальнейшая работа ведется с этой переменной.

    // Следующим этапом являются настройки - они делаются с помощью функции curl_setopt, которая первым параметром принимает переменную с сеансом, вторым параметром - название параметра для настройки (в виде константы PHP), а третьим параметром - значение параметра настройки.

    // После настроек вызывается функция curl_exec, которая и выполняет запрос к сайту в соответствии с настройками. Эта функция возвращает HTML код заданной страницы.

	// $url = 'https://engtrainer.ru'; // Адрес страницы для обращения
	// $curl = curl_init(); // Инициализируем сеанс
	// curl_setopt($curl, CURLOPT_URL, $url); // Указываем адрес страницы
    // curl_exec($curl);  // Выполняем запрос




    // Ответ CURL в переменную в PHP
    // Следующая настройка заставляет ответ сервера сохранять в переменную, а не выводить на страницу браузера:
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); 



    // Проверка ответа CURL на ошибку в PHP
    // Если в процессе запроса случится какая-то ошибка, в переменную с результатом попадет false. Этим можно воспользоваться для проверки на ошибку:
    // Выполняем запрос:
	$res = curl_exec($curl);
	
	if ($res === false) {
		// Выведем сообщение об ошибке:
		echo 'error';
	} else {
		// Выведем результат:
		var_dump($res);
	}
    // С помощью функции curl_error можно получить текст ошибки, случившейся в CURL
    // Выполняем запрос:
	$res = curl_exec($curl);
	
	if ($res === false) {
		// Выведем ошибку:
		echo curl_error($curl);
	} else {
		// Выведем результат:
		var_dump($res);
	}


    // Переход по редиректам в CURL в PHP
    // Следующая команда заставляет CURL переходить по HTTP редиректам:
    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); 



    // Работа с HTTPS в CURL в PHP
    // Следующие команды позволяют CURL получать текст сайтов, работающих через протокол HTTPS:
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); 
	curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false); 



    // Имитация браузера через CURL в PHP
    // Следующая команда заставляет CURL имитировать браузер, отправляя заголовок User-Agent:
    curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)');



    // Отправка данных методом POST через CURL в PHP
    // С помощью CURL можно отправлять данные методом POST, имитируя отправку формы. Для этого нужно указать, что запрос будет делаться методом POST.
    curl_setopt($curl, CURLOPT_POST, 1);

    $data = ['field1'=>'value1', 'field2'=>'value2']; 
	curl_setopt($curl, CURLOPT_POSTFIELDS, $data); 

    // Также данные могут быть указаны в виде Query String:
    $data = 'field1=value1&field2=value2';
	curl_setopt($curl, CURLOPT_POSTFIELDS, $data);


    
    // Отправка куки на сервер через CURL в PHP
    // Средствами CURL можно отправлять куки, создавая для целевого сайта ощущение, что кука отправлена настоящим браузером. Это делается с помощью опции CURLOPT_COOKIE.
    // Давайте для примера установим куку с именем 'name' и значением 'john':
    curl_setopt($curl, CURLOPT_COOKIE, 'name=john'); 
    curl_setopt($curl, CURLOPT_COOKIE, 'name=john; login=admin');


    // Обратная отправка кук через CURL в PHP
    // Сохраненные в файле куки можно автоматически отправлять назад при следующем запросе. Это делается с помощью двух опций: опция CURLOPT_COOKIEJAR командует принимать и сохранять куки в файл, а опция CURLOPT_COOKIEFILE командует отправлять сохраненные куки на сервер.


    // Установка HTTP заголовков через CURL в PHP
    // С помощью опции CURLOPT_HTTPHEADER можно при запросе отправлять HTTP заголовки запроса. В качестве параметра эта опция принимает массив заголовков и их значений.
    
?>