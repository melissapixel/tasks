<!-- Введение в редиректы PHP

С помощью функции header можно перенаправить браузер с одной страницы на другую. Для этого нужно передать в ней HTTP заголовок Location: -->
<!-- <?php
	header('Location: test.php');
?> -->
<!-- Адрес целевой страницы может хранится и в переменной: -->
<!-- <?php
	$addr = 'test.php';
	header('Location: ' . $addr);
?>
<?php
	$addr = 'test.php';
	header("Location: $addr");
?>
 -->


<!-- Мгновенные редирект в PHP

Редирект, выполненный с помощью функции header не происходит в момент вызова этой функции. Ведь PHP сам не выполняет редирект, а только отправляет соответствующий HTTP заголовок в браузер.

Это значит, что редирект произойдет только тогда, когда PHP выполнит весь скрипт до конца. Из-за этого могут происходить всякие паразитные эффекты.

Для примера, в следующем коде мы хотим выполнить или редирект, или запрос к базе. Но запрос к базе выполнится даже если была команда на редирект: -->
<!-- <?php
	if ($_GET['test']) {
		header('Location: test.php');
	}
	
	$query = "UPDATE users SET changed=1 
		WHERE id=1"; 
	mysqli_query($link, $query); // выполнится 
		даже при редиректе! 
?> -->
<!-- Для избежания подобных проблем нужно сразу после редиректа вызвать функцию die, которая мгновенно завершит выполнение скрипта и редирект произойдет сразу же: -->
<!-- <?php
	if ($_GET['test']) {
		header('Location: test.php');
		die();
	}
	
	$query = "UPDATE users SET changed=1 
		WHERE id=1"; 
	mysqli_query($link, $query);
?> -->


<!-- GET запросы и редирект в PHP
При редиректе можно также передавать GET параметры: -->
<?php
	header('Location: test.php?arg=1');
?>


<!-- Саморедирект с добавлением параметров в PHP

Пусть на странице index.php передается GET параметр с именем arg. Выведем его содержимое на экран: -->
<?php
	echo $_GET['arg'];
?>
<!-- Пусть наша страница без GET параметра не может работать корректно. В нашем случае это действительно так, так как, если параметр не передан, то обращение к $_GET['arg'] приведет к ошибке.

Может возникнуть вопрос, почему вообще человек попадет на нашу страницу без параметра? Ведь мы можем везде на нашем сайте ставить ссылки с этим параметром. Однако, это не гарантия: юзер нашего сайта может, к примеру, копировать откуда-нибудь ссылку и потерять при этом параметр. Либо просто случайно его удалить, редактируя адресную строку.

В общем, в любом случае наш код должен предполагать такую ситуацию и что-то с ней сделать. Что же можно сделать?

Можно проверять наш GET параметр на существование и выводить его, только если он существует: -->
<?php
	if (isset($_GET['arg'])) {
		echo $_GET['arg'];
	} else {
		// как-то реагируем, например, 
			сообщением 
	}
?>
<!-- Можно поступить хитрее: -->
<?php
	if (!isset($_GET['arg'])) {
		$_GET['arg'] = 'default'; // значение по умолчанию 
	}
	
	echo $_GET['arg']; // гарантировано что-то выведет без ошибки 
?>
<!-- А можно сделать так, чтобы при заходе на страницу без параметра происходил редирект на эту же страницу с параметром: -->
<?php
	if (!isset($_GET['arg'])) {
		header('Location: ?arg=default');
	}
	
	echo $_GET['arg']; // параметр 
		гарантированно есть 
?>




<!-- Флеш сообщения в PHP

Иногда при редиректе нужно передать некоторую информацию с одной страницы на другую. Например, чтобы вывести на целевой странице какое-нибудь текст для пользователя

Такие сообщения называются флеш (flash) сообщениями. Такое название выбрано потому, что сообщение должно показаться только один раз, а при обновлении страницы исчезнуть.

Давайте реализуем описанное. Пусть на странице page.php мы записываем в сессию некоторое сообщение и выполняем редирект на другую страницу: -->
<?php
	session_start();
	
	$_SESSION['flash'] = 'сообщение';
	header('Location: index.php');
	die();
?>
<!-- На странице index.php выведем сообщение и удалим его из сессии во избежание повторного показа: -->
<?php
	session_start();
	if (isset($_SESSION['flash'])) {
		echo $_SESSION['flash'];
		unset($_SESSION['flash']);
	}
?>


<!-- Массив флеш сообщений в PHP

Может быть такое, что нам необходимо показывать не одно флеш сообщение, а несколько. В этом случае нам нужно сделать массив сообщений.

Пусть на странице page1.php записывается первое сообщение: -->
<?php
	session_start();
	$_SESSION['flash'][] = 'сообщение 1'; 
?>
<!-- А на странице page2.php записывается второе сообщение: -->
<?php
	session_start();
	$_SESSION['flash'][] = 'сообщение 2'; 
?>
<!-- Покажем эти сообщения на странице index.php и очистим массив с сообщениями: -->
<?php
	session_start();
	
	if (!empty($_SESSION['flash'])) {
		foreach ($_SESSION['flash'] as $flash) {
			echo $flash;
		}
		
		$_SESSION['flash'] = []; // очистим сообщения 
	}
?>
<!-- 
Отправка формы в БД и редирект в PHP
Пусть у нас есть некоторая форма: -->

<form method="POST">
	<input name="test1">
	<input name="test2">
	<input type="submit">
</form>
<!-- Давайте сохраним данные этой формы в базу: -->
<?php
	if (!empty($_POST)) {
		// сохраняем в базу
	}
?>
<!-- Здесь, однако, нас поджидает проблема: если обновить страницу браузера, то форма будет отправлена и сохранена еще раз, породив дубль данных.

Для решения проблемы нужно после сохранения формы выполнить редирект на эту же страницу: -->
<?php
	if (!empty($_POST)) {
		// сохраняем в базу
		
		header('Location: form.php');
		die();
	}
?>


<!-- Сообщения об успехе при отправке формы в PHP
Давайте теперь сделаем так, чтобы после редиректа на страницу выводилось сообщение об успехе сохранения. Используем для этого флеш сообщения: -->
<?php
	session_start();
	
	if (!empty($_POST)) {
		// сохраняем в базу
		
		$_SESSION['flash'] = 'форма успешно 
			сохранена'; 
		header('Location: form.php');
		die();
	}
	
	if (isset($_SESSION['flash'])) {
		echo $_SESSION['flash'];
		unset($_SESSION['flash']);
	}
?>

<!-- Редирект при валидация формы в PHP

Представим теперь, что вам необходимо выполнять валидацию формы.

Если валидация пройдена успешно, то форму будем сохранять в бд и выводить сообщение об успехе. В противном случае нужно вывести сообщение о неудаче. Реализуем: -->
<?php
	session_start();
	
	if (!empty($_POST)) {
		if (валидация формы) {
			// сохраняем в базу
			
			$_SESSION['flash'] = 'форма успешно 
				сохранена'; 
			header('Location: form.php');
			die();
		} else {
			$_SESSION['flash'] = 'форма не 
				прошла валидацию'; 
		}
	}
	
	if (isset($_SESSION['flash'])) {
		echo $_SESSION['flash'];
		unset($_SESSION['flash']);
	}
?>
